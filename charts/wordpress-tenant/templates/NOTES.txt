1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if .Values.loadBalancer.enabled }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "wordpress-tenant.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "wordpress-tenant.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "wordpress-tenant.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "wordpress-tenant.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. WordPress admin credentials:
   Username: {{ .Values.wordpress.site.adminUser }}
   Password: Run the following command to get the password:
     kubectl get secret --namespace {{ .Release.Namespace }} {{ include "wordpress-tenant.fullname" . }} -o jsonpath="{.data.admin-password}" | base64 --decode

3. WordPress MCP API access:
   {{- if .Values.wordpress.mcp.enabled }}
   MCP STDIO Endpoint: {{ .Values.wordpress.site.url }}/wp-json/wp/v2/wpmcp
   MCP Streamable Endpoint: {{ .Values.wordpress.site.url }}/wp-json/wp/v2/wpmcp/streamable
   
   Get MCP API Key:
     kubectl get secret --namespace {{ .Release.Namespace }} {{ include "wordpress-tenant.fullname" . }} -o jsonpath="{.data.mcp-api-key}" | base64 --decode
   {{- else }}
   MCP plugin is disabled. Enable it in values.yaml to access MCP endpoints.
   {{- end }}

4. Database access (if using internal database):
   {{- if .Values.database.internal.enabled }}
   Host: {{ include "wordpress-tenant.fullname" . }}-mariadb.{{ .Release.Namespace }}.svc.cluster.local
   Port: 3306
   Database: {{ .Values.database.internal.auth.database }}
   Username: {{ .Values.database.internal.auth.username }}
   Password: Run the following command to get the password:
     kubectl get secret --namespace {{ .Release.Namespace }} {{ include "wordpress-tenant.fullname" . }}-mariadb -o jsonpath="{.data.mariadb-password}" | base64 --decode
   {{- end }}

5. Tenant Information:
   Tenant ID: {{ .Values.global.tenant }}
   Namespace: {{ .Release.Namespace }}
   {{- if .Values.wordpress.auth.oauth.enabled }}
   SSO Integration: Enabled (Authentik)
   {{- end }}